---
- name: Setup Nomad Client
  hosts: nomadClients
  become: yes
  become_user: root
  become_method: sudo
  gather_facts: no

  handlers:
    - name: Restart Nomad
      service: name=nomad state=restarted

  tasks:
    - file:
        path: "{{ item.path }}"
        state: directory
      loop: "{{ host_volumes }}"

    - blockinfile:
        path: /etc/nomad.d/client.hcl
        create: yes
        mode: 0700
        block: |
          client {
            enabled = true

            gc_interval = "5m"

            {% if node_class %}
            node_class = "{{ node_class }}"
            {% endif %}
            
            options = {
              "driver.denylist" = "java"
            }

            servers = [{% for i in groups['nomadServers'] %}"{{ i }}",{% endfor %}]

            host_volume "ca-certificates" {
              path = "/etc/ssl/certs"
              read_only = true
            }

            host_volume "priv-certs" {
              path = "/etc/ssl/private/"
              read_only = true
            }

            {% for host in host_volumes %}
            host_volume "{{ host.name }}" {
              path = "{{ host.path }}"
              read_only = {% if host.read_only %}true{% else %}false{% endif %}
            }
            {% endfor %}

            reserved {
              {% if node_class == "storage"  %}
              cpu    = 500  # OpenZFS
              memory = 1024 # OpenZFS
              {% else %}
              cpu    = 250
              memory = 256
              {% endif %}
            }
          }

          plugin "raw_exec" {
            config {
              enabled = true
            }
          }
      notify: Restart Nomad

    - ufw:
        proto: "{{ item.proto }}"
        port: "{{ item.port }}"
        rule: allow
      loop:
        - { proto: any, port: 80 } # HTTP
        - { proto: any, port: 443 } # HTTPS
        - { proto: any, port: 8081 } # Traefik
        - { proto: any, port: 1900 } # Jellyfin DLNA / upnp
        - { proto: any, port: 7359 } # Jellyfin autodiscovery

    - ufw:
        rule: allow
        proto: tcp
        port: "20000:32000"

    - ufw:
        rule: allow
        proto: udp
        port: "20000:32000"
        direction: in
        interface: "{{ item }}"
      loop:
        - eth0
        - wlan0
        - tailscale0
