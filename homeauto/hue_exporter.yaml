---
- name: Hue Exporter for Grafana
  hosts: homeautomation
  become: yes
  become_user: root
  become_method: sudo
  gather_facts: yes
  vars_prompt:
    # Find ip address: https://discovery.meethue.com/
    - name: hue_endpoint
      prompt: "Enter Hue Bridge IP Address ( https://discovery.meethue.com/ )"
      private: yes
    # Create userne: https://192.168.197.162/debug/clip.html
    # info: https://developers.meethue.com/develop/get-started-2/
    - name: hue_username
      prompt: "Enter Hue username"
      private: yes

  handlers:
    - name: Restart hue_exporter
      systemd: name=hue_exporter state=restarted daemon_reload=true
    - name: Restart grafana-agent
      systemd: name=grafana-agent state=restarted daemon_reload=true

  tasks:
    # - name: "Install Go"
    #   package:
    #     name: golang
    #     state: present

    # - name: Create temporary build directory
    #   tempfile:
    #     state: directory
    #     suffix: hue_exp_gopath
    #   register: tempdir

    # - name: Create temporary build directory (binaries)
    #   tempfile:
    #     state: directory
    #     suffix: hue_exp_bin
    #   register: tempdir_bin

    # - name: Install from source Hue Exporter Binary
    #   shell:
    #     cmd: GOPATH="{{ tempdir.path }}" GOBIN="{{ tempdir_bin.path }}" go install github.com/aexel90/hue_exporter@main
    #     chdir: "{{ tempdir.path }}"

    # Build the binary from ( http://github.com/aexel90/hue_exporter )
    # cd $(mktemp -d)
    # git clone github.com/aexel90/hue_exporter .
    # GOARCH=arm GOARM=6 GOOS=linux CGO_ENABLED=0 go build -o hue_exporter_armv6
    # GOARCH=arm64 GOOS=linux CGO_ENABLED=0 go build -o hue_exporter_arm64

    - name: "Copy the binary"
      copy:
        remote_src: false
        src: "hue_exporter_{{ansible_machine}}"
        dest: /usr/bin/hue_exporter
        owner: root
        group: root
        mode: 0655
      notify: Restart hue_exporter

    - name: Setup Hue Exporter config
      blockinfile:
        create: yes
        path: /etc/default/hue_exporter
        block: |
          HUE_EXPORTER_USERNAME="{{ hue_username }}"
          HUE_EXPORTER_ENDPOINT="{{ hue_endpoint }}"
      notify: Restart hue_exporter

    - name: "Copy the configuration"
      copy:
        remote_src: false
        src: hue_metrics.json
        dest: /etc/hue_exporter.json
        owner: root
        group: root
        mode: 0644
      notify: Restart hue_exporter

    - name: Setup hue_exporter systemd service
      blockinfile:
        create: yes
        path: /etc/systemd/system/hue_exporter.service
        block: |
          [Unit]
          Description=Hue Exporter
          Documentation=https://github.com/aexel90/hue_exporter
          Wants=network-online.target
          After=network-online.target
          AssertFileIsExecutable=/usr/bin/hue_exporter

          # Max 5 retries on restart
          StartLimitInterval=90
          StartLimitBurst=30

          [Service]
          WorkingDirectory=/usr/local

          Restart=always
          RestartSec=30

          PermissionsStartOnly=true
          EnvironmentFile=-/etc/default/hue_exporter
          # Sleeping 7 seconds to wait for sleep
          ExecStart=/usr/bin/hue_exporter -metrics-file /etc/hue_exporter.json -username $HUE_EXPORTER_USERNAME -hue-url $HUE_EXPORTER_ENDPOINT

          StandardOutput=journal
          StandardError=inherit

          # Disable timeout logic and wait until process is stopped
          TimeoutStopSec=5

          # SIGTERM signal is used to stop Minio
          KillSignal=SIGTERM

          SendSIGKILL=no
          SuccessExitStatus=0

          [Install]
          WantedBy=multi-user.target
      notify: Restart hue_exporter

    - name: Setup hue_exporter in Grafana
      blockinfile:
        create: yes
        path: /etc/grafana-agent.yaml
        insertbefore: "    - job_name: integrations/minio"
        block: |
          # Indent properly
              - job_name: hue_exporter
                static_configs:
                  - targets: ["localhost:9773"]
      notify: Restart grafana-agent

    - name: Enable hue_exporter service
      service:
        name: hue_exporter
        enabled: yes
      notify: Restart hue_exporter
