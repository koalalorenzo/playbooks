---
- name: Setup Grafana Agent
  hosts: all
  become: yes
  become_user: root
  become_method: sudo
  gather_facts: yes

  handlers:
    - name: Restart grafana-agent
      service: name=grafana-agent state=restarted

  tasks:
    - name: Load encrypted credentials
      community.sops.load_vars:
        file: monitoring_grafana.sops.yaml

    - apt_key:
        url: https://packages.grafana.com/gpg.key
        state: present

    - apt_repository:
        repo: "deb https://packages.grafana.com/oss/deb stable main"
        state: present

    - package:
        name: grafana-agent
        state: latest
      register: grafanapkg
      notify: Restart grafana-agent

    - name: Add Grafana config file
      copy:
        dest: /etc/grafana-agent.yaml
        mode: 0644
        content: |
          integrations:
            prometheus_remote_write:
            - basic_auth:
                password: {{ grafana_token }}
                username: {{ grafana_prometheus_username }}
              url: {{ grafana_prometheus_url }}
            agent:
              enabled: true
              relabel_configs:
              - action: replace
                source_labels:
                - agent_hostname
                target_label: instance
              - action: replace
                target_label: job
                replacement: "integrations/agent-check"
              metric_relabel_configs:
              - action: keep
                regex: (prometheus_target_.*|prometheus_sd_discovered_targets|agent_build.*|agent_wal_samples_appended_total|process_start_time_seconds)
                source_labels:
                - __name__
            consul_exporter:
              enabled: true
              relabel_configs:
                - replacement: {{ ansible_hostname }}
                  target_label: instance
            # Add here any snippet that belongs to the `integrations` section.
            # For a correct indentation, paste snippets copied from Grafana Cloud at the beginning of the line.
            node_exporter:
              enabled: true
              # disable unused collectors
              disable_collectors:
                - ipvs #high cardinality on kubelet
                - btrfs
                - infiniband
                - xfs
                - nfs
              enable_collectors:
                - meminfo_numa
                - processes
                - systemd
                - zfs
              # exclude dynamic interfaces
              netclass_ignored_devices: "^(veth.*|cali.*|[a-f0-9]{15})$"
              netdev_device_exclude: "^(veth.*|cali.*|[a-f0-9]{15})$"
              # disable tmpfs
              filesystem_fs_types_exclude: "^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|tmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$"
              # drop extensive scrape statistics
              metric_relabel_configs:
              - action: drop
                regex: node_scrape_collector_.+
                source_labels: [__name__]
              relabel_configs:
              - replacement: {{ ansible_hostname }}
                target_label: instance
          ###
          logs:
            configs:
            - clients:
              - basic_auth:
                  password: {{ grafana_token }}
                  username: {{ grafana_loki_username }}
                url: {{ grafana_loki_url }}
              name: integrations
              positions:
                filename: /tmp/positions.yaml
              scrape_configs:
                # Add here any snippet that belongs to the `logs.configs.scrape_configs` section.
                # For a correct indentation, paste snippets copied from Grafana Cloud at the beginning of the line.
                - job_name: integrations/node_exporter_journal_scrape
                  journal:
                    max_age: 24h
                    labels:
                      instance: {{ ansible_hostname }}
                      job: integrations/node_exporter
                  relabel_configs:
                  - source_labels: ['__journal__systemd_unit']
                    target_label: 'unit'
                  - source_labels: ['__journal__boot_id']
                    target_label: 'boot_id'
                  - source_labels: ['__journal__transport']
                    target_label: 'transport'
                  - source_labels: ['__journal_priority_keyword']
                    target_label: 'level'
                - job_name: integrations/node_exporter_direct_scrape
                  static_configs:
                  - targets:
                    - localhost
                    labels:
                      instance: {{ ansible_hostname }}
                      __path__: /var/log/{syslog,messages,*.log}
                      job: integrations/node_exporter
          metrics:
            configs:
            - name: integrations
              remote_write:
              - basic_auth:
                  password: {{ grafana_token }}
                  username: {{ grafana_prometheus_username }}
                url: {{ grafana_prometheus_url }}
              scrape_configs:
                # Add here any snippet that belongs to the `metrics.configs.scrape_configs` section.
                # For a correct indentation, paste snippets copied from Grafana Cloud at the beginning of the line.
                - job_name: integrations/nomad
                  metrics_path: /v1/metrics
                  params:
                    format: ['prometheus']
                  static_configs:
                    - targets: ["{{ ansible_hostname }}:4646"]
                - job_name: integrations/traefik
                  static_configs:
                    - targets: ["{{ ansible_hostname }}:8081"]
                - job_name: consul_services
                  consulagent_sd_configs:
                    - refresh_interval: 30s
                      tags: ["prometheus"]
            global:
              scrape_interval: 60s
            wal_directory: /tmp/grafana-agent-wal
      notify: Restart grafana-agent

    - name: Set ACL for Grafana Agent's user on various files
      ansible.builtin.acl:
        path: "{{ item }}"
        entity: "grafana-agent"
        etype: user
        permissions: r
        state: present
      loop:
        - /var/log/boot.log
        - /var/log/syslog
        - /var/log/auth.log
        - /var/log/ufw.log
        - /var/log/kern.log
        - /var/log/fail2ban.log
      notify: Restart grafana-agent

    - name: Enable Grafana Agent
      service:
        name: grafana-agent
        enabled: yes
      notify: Restart grafana-agent
