---
- name: Setup Grafana Agent
  hosts: all
  become: yes
  become_user: root
  become_method: sudo
  gather_facts: yes

  handlers:
    - name: Restart grafana-agent
      service: name=grafana-agent state=restarted

  tasks:
    - name: Load encrypted credentials
      community.sops.load_vars:
        file: monitoring_grafana.sops.yaml

    - apt_key:
        url: https://packages.grafana.com/gpg.key
        state: present

    - apt_repository:
        repo: "deb https://packages.grafana.com/oss/deb stable main"
        state: present

    - package:
        name: grafana-agent
        state: latest
      notify: Restart grafana-agent

    - name: Add Grafana config file
      copy:
        dest: /etc/grafana-agent.yaml
        mode: 0644
        content: |
          integrations:
            cadvisor:
              # Disabled as docker metrics are not important as logs for now
              enabled: false
              docker_only: true
              instance: {{ ansible_hostname }}
              relabel_configs:
              - action: replace
                replacement: integrations/docker
                target_label: job
              metric_relabel_configs:
              - action: keep
                regex: container_cpu_usage_seconds_total|container_fs_inodes_free|container_fs_inodes_total|container_fs_limit_bytes|container_fs_usage_bytes|container_last_seen|container_memory_usage_bytes|container_network_receive_bytes_total|container_network_tcp_usage_total|container_network_transmit_bytes_total|container_spec_memory_reservation_limit_bytes|machine_memory_bytes|machine_scrape_error
                source_labels:
                - __name__

            prometheus_remote_write:
            - basic_auth:
                password: {{ grafana_token }}
                username: {{ grafana_prometheus_username }}
              url: {{ grafana_prometheus_url }}
              remote_timeout: 60s

            agent:
              enabled: true
              relabel_configs:
                - action: replace
                  source_labels:
                    - agent_hostname
                  target_label: instance
              metric_relabel_configs:
              - action: keep
                regex: agent_build_info|agent_tcp_connections|agent_wal_samples_appended_total|agent_wal_storage_active_series|go_gc_duration_seconds_count|go_goroutines|go_memstats_heap_inuse_bytes|process_cpu_seconds_total|process_start_time_seconds|prometheus_remote_storage_enqueue_retries_total|prometheus_remote_storage_highest_timestamp_in_seconds|prometheus_remote_storage_queue_highest_sent_timestamp_seconds|prometheus_remote_storage_samples_dropped_total|prometheus_remote_storage_samples_failed_total|prometheus_remote_storage_samples_pending|prometheus_remote_storage_samples_retried_total|prometheus_remote_storage_samples_total|prometheus_remote_storage_sent_batch_duration_seconds_bucket|prometheus_remote_storage_sent_batch_duration_seconds_count|prometheus_remote_storage_sent_batch_duration_seconds_sum|prometheus_remote_storage_shard_capacity|prometheus_remote_storage_shards|prometheus_remote_storage_shards_desired|prometheus_remote_storage_shards_max|prometheus_remote_storage_shards_min|prometheus_remote_storage_succeeded_samples_total|prometheus_sd_discovered_targets|prometheus_target_interval_length_seconds_count|prometheus_target_interval_length_seconds_sum|prometheus_target_scrapes_exceeded_sample_limit_total|prometheus_target_scrapes_sample_duplicate_timestamp_total|prometheus_target_scrapes_sample_out_of_bounds_total|prometheus_target_scrapes_sample_out_of_order_total|prometheus_target_sync_length_seconds_sum|prometheus_wal_watcher_current_segment|traces_exporter_send_failed_spans|traces_exporter_sent_spans|traces_loadbalancer_backend_outcome|traces_loadbalancer_num_backends|traces_receiver_accepted_spans|traces_receiver_refused_spans
                source_labels:
                - __name__

            consul_exporter:
              enabled: true
              relabel_configs:
                - replacement: {{ ansible_hostname }}
                  target_label: instance
            # Add here any snippet that belongs to the `integrations` section.
            # For a correct indentation, paste snippets copied from Grafana Cloud at the beginning of the line.

            node_exporter:
              enabled: true
              # disable unused collectors
              disable_collectors:
                - ipvs #high cardinality on kubelet
                - btrfs
                - infiniband
                - xfs
                - nfs
              enable_collectors:
                - meminfo_numa
                - processes
                - systemd
                - zfs
              # exclude dynamic interfaces
              netclass_ignored_devices: "^(veth.*|cali.*|[a-f0-9]{15})$"
              netdev_device_exclude: "^(veth.*|cali.*|[a-f0-9]{15})$"
              # disable tmpfs
              filesystem_fs_types_exclude: "^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|tmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$"
              # drop extensive scrape statistics
              relabel_configs:
              - replacement: {{ ansible_hostname }}
                target_label: instance
              metric_relabel_configs:
              #- action: keep
              #  separator: "@"
              #  regex: "node_systemd_unit_state@(consul.*|nomad.*|docker.*|atd.*|cloud.*|apt.*|cron.*|grafana-agent.*|nfs.*|ufw.*|unattended.*|tailscale.*|zfs.*|wpa.*|network.*|ssh.*|podman.*)"
              #  source_labels: [__name__, name]
              - action: drop
                regex: node_scrape_collector_.+
                source_labels:
                - __name__
              - action: keep
                regex: node_arp_entries|node_boot_time_seconds|node_context_switches_total|node_cpu_seconds_total|node_disk_io_time_seconds_total|node_disk_io_time_weighted_seconds_total|node_disk_read_bytes_total|node_disk_read_time_seconds_total|node_disk_reads_completed_total|node_disk_write_time_seconds_total|node_disk_writes_completed_total|node_disk_written_bytes_total|node_filefd_allocated|node_filefd_maximum|node_filesystem_avail_bytes|node_filesystem_device_error|node_filesystem_files|node_filesystem_files_free|node_filesystem_readonly|node_filesystem_size_bytes|node_intr_total|node_load1|node_load15|node_load5|node_md_disks|node_md_disks_required|node_memory_Active_anon_bytes|node_memory_Active_bytes|node_memory_Active_file_bytes|node_memory_AnonHugePages_bytes|node_memory_AnonPages_bytes|node_memory_Bounce_bytes|node_memory_Buffers_bytes|node_memory_Cached_bytes|node_memory_CommitLimit_bytes|node_memory_Committed_AS_bytes|node_memory_DirectMap1G_bytes|node_memory_DirectMap2M_bytes|node_memory_DirectMap4k_bytes|node_memory_Dirty_bytes|node_memory_HugePages_Free|node_memory_HugePages_Rsvd|node_memory_HugePages_Surp|node_memory_HugePages_Total|node_memory_Hugepagesize_bytes|node_memory_Inactive_anon_bytes|node_memory_Inactive_bytes|node_memory_Inactive_file_bytes|node_memory_Mapped_bytes|node_memory_MemAvailable_bytes|node_memory_MemFree_bytes|node_memory_MemTotal_bytes|node_memory_SReclaimable_bytes|node_memory_SUnreclaim_bytes|node_memory_ShmemHugePages_bytes|node_memory_ShmemPmdMapped_bytes|node_memory_Shmem_bytes|node_memory_Slab_bytes|node_memory_SwapTotal_bytes|node_memory_VmallocChunk_bytes|node_memory_VmallocTotal_bytes|node_memory_VmallocUsed_bytes|node_memory_WritebackTmp_bytes|node_memory_Writeback_bytes|node_netstat_Icmp6_InErrors|node_netstat_Icmp6_InMsgs|node_netstat_Icmp6_OutMsgs|node_netstat_Icmp_InErrors|node_netstat_Icmp_InMsgs|node_netstat_Icmp_OutMsgs|node_netstat_IpExt_InOctets|node_netstat_IpExt_OutOctets|node_netstat_TcpExt_ListenDrops|node_netstat_TcpExt_ListenOverflows|node_netstat_TcpExt_TCPSynRetrans|node_netstat_Tcp_InErrs|node_netstat_Tcp_InSegs|node_netstat_Tcp_OutRsts|node_netstat_Tcp_OutSegs|node_netstat_Tcp_RetransSegs|node_netstat_Udp6_InDatagrams|node_netstat_Udp6_InErrors|node_netstat_Udp6_NoPorts|node_netstat_Udp6_OutDatagrams|node_netstat_Udp6_RcvbufErrors|node_netstat_Udp6_SndbufErrors|node_netstat_UdpLite_InErrors|node_netstat_Udp_InDatagrams|node_netstat_Udp_InErrors|node_netstat_Udp_NoPorts|node_netstat_Udp_OutDatagrams|node_netstat_Udp_RcvbufErrors|node_netstat_Udp_SndbufErrors|node_network_carrier|node_network_info|node_network_mtu_bytes|node_network_receive_bytes_total|node_network_receive_compressed_total|node_network_receive_drop_total|node_network_receive_errs_total|node_network_receive_fifo_total|node_network_receive_multicast_total|node_network_receive_packets_total|node_network_speed_bytes|node_network_transmit_bytes_total|node_network_transmit_compressed_total|node_network_transmit_drop_total|node_network_transmit_errs_total|node_network_transmit_fifo_total|node_network_transmit_multicast_total|node_network_transmit_packets_total|node_network_transmit_queue_length|node_network_up|node_nf_conntrack_entries|node_nf_conntrack_entries_limit|node_os_info|node_sockstat_FRAG6_inuse|node_sockstat_FRAG_inuse|node_sockstat_RAW6_inuse|node_sockstat_RAW_inuse|node_sockstat_TCP6_inuse|node_sockstat_TCP_alloc|node_sockstat_TCP_inuse|node_sockstat_TCP_mem|node_sockstat_TCP_mem_bytes|node_sockstat_TCP_orphan|node_sockstat_TCP_tw|node_sockstat_UDP6_inuse|node_sockstat_UDPLITE6_inuse|node_sockstat_UDPLITE_inuse|node_sockstat_UDP_inuse|node_sockstat_UDP_mem|node_sockstat_UDP_mem_bytes|node_sockstat_sockets_used|node_softnet_dropped_total|node_softnet_processed_total|node_softnet_times_squeezed_total|node_systemd_unit_state|node_textfile_scrape_error|node_time_zone_offset_seconds|node_timex_estimated_error_seconds|node_timex_maxerror_seconds|node_timex_offset_seconds|node_timex_sync_status|node_uname_info|node_vmstat_oom_kill|node_vmstat_pgfault|node_vmstat_pgmajfault|node_vmstat_pgpgin|node_vmstat_pgpgout|node_vmstat_pswpin|node_vmstat_pswpout|process_max_fds|process_open_fds
                source_labels:
                - __name__
          ###
          logs:
            configs:
            - clients:
              - basic_auth:
                  password: {{ grafana_token }}
                  username: {{ grafana_loki_username }}
                url: {{ grafana_loki_url }}
              name: integrations
              positions:
                filename: /tmp/positions.yaml
              scrape_configs:
                # Add here any snippet that belongs to the `logs.configs.scrape_configs` section.
                # For a correct indentation, paste snippets copied from Grafana Cloud at the beginning of the line.
                - job_name: integrations/node_exporter_journal_scrape
                  journal:
                    max_age: 24h
                    labels:
                      instance: {{ ansible_hostname }}
                      job: integrations/node_exporter
                  relabel_configs:
                  - source_labels: ['__journal__systemd_unit']
                    target_label: 'unit'
                  - source_labels: ['__journal__boot_id']
                    target_label: 'boot_id'
                  - source_labels: ['__journal__transport']
                    target_label: 'transport'
                  - source_labels: ['__journal_priority_keyword']
                    target_label: 'level'
                - job_name: integrations/node_exporter_direct_scrape
                  static_configs:
                  - targets:
                    - localhost
                    labels:
                      instance: {{ ansible_hostname }}
                      __path__: /var/log/{syslog,messages,*.log}
                      job: integrations/node_exporter

                - job_name: integrations/docker
                  docker_sd_configs:
                    - host: unix:///var/run/docker.sock
                      refresh_interval: 5s
                  relabel_configs:
                  - action: replace
                    replacement: integrations/docker
                    target_label: job
                  - action: replace
                    replacement: {{ ansible_hostname }}
                    target_label: instance
                  - source_labels:
                      - __meta_docker_container_name
                    regex: '/(.*)'
                    target_label: container
                  - source_labels: 
                      - __meta_docker_container_log_stream
                    target_label: stream

                - job_name: integrations/agent
                  journal:
                    max_age: 24h
                    labels:
                      job: integrations/agent
                  pipeline_stages:
                    - match:
                        selector: '{unit!="grafana-agent.service"}'
                        action: drop
                        drop_counter_reason: only_keep_grafana_agent_logs
                    - regex:
                        expression: "(level=(?P<log_level>[\\s]*debug|warn|info|error))"
                    - labels:
                        level: log_level
                  relabel_configs:
                    - source_labels: ['__journal__systemd_unit']
                      target_label: 'unit'
                    - source_labels: ['__journal__hostname']
                      target_label: 'instance'
          metrics:
            configs:
            - name: integrations
              remote_write:
              - basic_auth:
                  password: {{ grafana_token }}
                  username: {{ grafana_prometheus_username }}
                url: {{ grafana_prometheus_url }}
              scrape_configs:
                # Disabled as Nomad metrics are not used
                # - job_name: integrations/nomad
                #   metrics_path: /v1/metrics
                #   params:
                #     format: ['prometheus']
                #   relabel_configs:
                #   - replacement: {{ ansible_hostname }}
                #     target_label: instance
                #   static_configs:
                #     - targets: ["{{ ansible_hostname }}:4646"]
                #   metric_relabel_configs:
                #   - action: keep
                #     regex: nomad_client_allocated_cpu|nomad_client_allocated_disk|nomad_client_allocated_memory|nomad_client_allocs_cpu_total_percent|nomad_client_allocs_cpu_total_ticks|nomad_client_allocs_memory_cache|nomad_client_allocs_memory_rss|nomad_client_host_cpu_idle|nomad_client_host_disk_available|nomad_client_host_disk_inodes_percent|nomad_client_host_disk_size|nomad_client_host_memory_available|nomad_client_host_memory_free|nomad_client_host_memory_total|nomad_client_host_memory_used|nomad_client_unallocated_cpu|nomad_client_unallocated_disk|nomad_client_unallocated_memory|nomad_client_uptime
                #     source_labels:
                #     - __name__

                # Disabled as Traefik Metrics are not used
                # - job_name: integrations/traefik
                #   static_configs:
                #     - targets: ["{{ ansible_hostname }}:8081"]

                - job_name: consul_services
                  consulagent_sd_configs:
                    - refresh_interval: 30s
                      tags: ["prometheus"]
            global:
              scrape_interval: 60s
            wal_directory: /tmp/grafana-agent-wal
      notify: Restart grafana-agent

    - name: Determine available groups
      getent:
        database: group

    - name: Add additional groups (docker etc), to grafana-agent if the groups exists
      user:
        name: "grafana-agent"
        groups: "{{item}}"
        append: yes
      when: item in ansible_facts.getent_group
      with_items:
        - docker
      notify: Restart grafana-agent

    - name: Set ACL for Grafana Agent's user on various files
      ansible.builtin.acl:
        path: "{{ item }}"
        entity: "grafana-agent"
        etype: user
        permissions: r
        state: present
      loop:
        - /var/log/boot.log
        - /var/log/syslog
        - /var/log/auth.log
        - /var/log/ufw.log
        - /var/log/kern.log
        - /var/log/fail2ban.log
      notify: Restart grafana-agent

    - name: Enable Grafana Agent
      service:
        name: grafana-agent
        enabled: yes
      notify: Restart grafana-agent
