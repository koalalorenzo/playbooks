---
- name: SSL Setup
  serial: 1
  hosts:
    - nas
    - web
    - dns
  become: yes
  become_user: root
  become_method: sudo
  gather_facts: yes
  vars_prompt:
    - name: cloudflare_email
      prompt: "Enter Cloudflare username (Cloudflare - Personal)"
      private: no
    - name: cloudflare_api_token
      prompt: "Enter Cloudflare api_token (Cloudflare - Personal)"
      private: yes

  vars:
    certs_path: /etc/ssl/setale.me/
    crt_common_name: "setale.me"
    crt_subject_alt_name:
      - "dwn.setale.me"
      - "bt.setale.me"
      - "h.setale.me"
      - "minio.setale.me"
      - "minio-api.setale.me"
      - "graph.setale.me"
      - "dash.setale.me"
      - "archive.setale.me"
      - "dns.setale.me"
    cloudflare_zone: setale.me

  handlers:
    - name: Restart nginx
      service: name=nginx state=restarted
      when: '"nginx" in services'

  tasks:
  - name: Populate service facts
    service_facts:

  - stat: path=/etc/ssl/{{ ansible_hostname }}.fish-alpha.ts.net.key get_md5=yes
    register: tailscale_ssl_key_before
    ignore_errors: yes
    when: '"tailscale" in services'

  - name: Get HTTPS Certificates from tailscale
    shell: tailscale cert --cert-file /etc/ssl/{{ ansible_hostname }}.fish-alpha.ts.net.crt --key-file /etc/ssl/{{ ansible_hostname }}.fish-alpha.ts.net.key {{ ansible_hostname }}.fish-alpha.ts.net
    ignore_errors: yes
    changed_when: False
    when: '"tailscale" in services'

  - stat: path=/etc/ssl/{{ ansible_hostname }}.fish-alpha.ts.net.key get_md5=yes
    register: tailscale_ssl_key_after
    ignore_errors: yes
    when: '"tailscale" in services'

  - debug: msg='Notify to Restart NGINX if Tailscale SSL Certificate changed'
    changed_when: tailscale_ssl_key_before.stat.md5 != tailscale_ssl_key_after.stat.md5
    notify: Restart nginx
    when: '"tailscale" in services'

  - name: create directory to store certs
    file:
      path: "{{ certs_path }}"
      state: directory

  - name: Install dependencies required
    package:
      name: "{{ packages }}"
      state: present
    vars:
      packages:
        - openssl
        - python3
        - python3-openssl

  - name: generate account key
    openssl_privatekey:
      path: "{{ certs_path }}/account-key.pem"
      size: 4096

  - name: generate signing key
    openssl_privatekey:
      path: "{{ certs_path }}/cert-priv.pem"
      size: 4096
    notify: Restart nginx

  - name: generate csr
    openssl_csr:
      path: "{{ certs_path }}/cert.csr"
      privatekey_path: "{{ certs_path }}/cert-priv.pem"
      common_name: "{{ crt_common_name }}"
      subject_alt_name: "DNS:{{ crt_subject_alt_name | join(',DNS:') }}"
    register: csr_data
    notify: Restart nginx

  - name: create acme challenge
    acme_certificate:
      acme_version: 2
      terms_agreed: yes
      account_key_src: "{{ certs_path }}/account-key.pem"
      src: "{{ certs_path }}/cert.csr"
      cert: "{{ certs_path }}/cert.crt"
      challenge: dns-01
      acme_directory: https://acme-v02.api.letsencrypt.org/directory
      remaining_days: 90
    register: challenge
    when: csr_data is changed
    notify: Restart nginx

  - name: Pause 5 sec
    pause:
      seconds: "5"

  - name: create cloudflare TXT records
    cloudflare_dns:
      api_token: "{{ cloudflare_api_token }}"
      account_email: "{{ cloudflare_email }}"
      zone: "{{ cloudflare_zone }}"
      record: "{{ item.key }}"
      type: TXT
      value: "{{ item.value[0] }}"
      solo: true
      ttl: 60
      state: present
    # Disabled as *.h.setale.me will overwrite h.setale.me
    loop: "{{ challenge.challenge_data_dns | dict2items }}"
    # with_items: "{{ [crt_common_name] }}"
    when: challenge is changed

  - name: Pause
    pause:
      seconds: "61"

  - name: validate acme challenge
    acme_certificate:
      acme_version: 2
      account_key_src: "{{ certs_path }}/account-key.pem"
      src: "{{ certs_path }}/cert.csr"
      cert: "{{ certs_path }}/cert.crt"
      fullchain: "{{ certs_path }}/fullchain.crt"
      chain: "{{ certs_path }}/intermediate.crt"
      challenge: dns-01
      acme_directory: https://acme-v02.api.letsencrypt.org/directory
      remaining_days: 90
      data: "{{ challenge }}"
    when: challenge is changed
    notify: Restart nginx

  - name: delete cloudflare TXT record
    cloudflare_dns:
      api_token: "{{ cloudflare_api_token }}"
      account_email: "{{ cloudflare_email }}"
      zone: "{{ cloudflare_zone }}"
      record: "{{ item.key }}"
      type: TXT
      state: absent
    # Disabled as *.h.setale.me will overwrite h.setale.me
    loop: "{{ challenge.challenge_data_dns | dict2items }}"
    # with_items: "{{ [crt_common_name] }}"
    when: challenge is changed

